{
  "_args": [
    [
      {
        "raw": "browser-env@2.0.31",
        "scope": null,
        "escapedName": "browser-env",
        "name": "browser-env",
        "rawSpec": "2.0.31",
        "spec": "2.0.31",
        "type": "version"
      },
      "/Users/sotongo/Code/productivity/vendor/oburatongoi/productivity"
    ]
  ],
  "_from": "browser-env@2.0.31",
  "_id": "browser-env@2.0.31",
  "_inCache": true,
  "_location": "/browser-env",
  "_nodeVersion": "6.7.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/browser-env-2.0.31.tgz_1493800157744_0.6391306088771671"
  },
  "_npmUser": {
    "name": "lukechilds",
    "email": "lukechilds123@gmail.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "browser-env@2.0.31",
    "scope": null,
    "escapedName": "browser-env",
    "name": "browser-env",
    "rawSpec": "2.0.31",
    "spec": "2.0.31",
    "type": "version"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/browser-env/-/browser-env-2.0.31.tgz",
  "_shasum": "c9c89bc5d2d3e9b6f76788437465c7b1ab654ef7",
  "_shrinkwrap": null,
  "_spec": "browser-env@2.0.31",
  "_where": "/Users/sotongo/Code/productivity/vendor/oburatongoi/productivity",
  "author": {
    "name": "Luke Childs",
    "email": "lukechilds123@gmail.com",
    "url": "http://lukechilds.co.uk"
  },
  "bugs": {
    "url": "https://github.com/lukechilds/browser-env/issues"
  },
  "dependencies": {
    "window": "3.1.5"
  },
  "description": "Simulates a global browser environment using jsdom",
  "devDependencies": {
    "ava": "^0.19.0",
    "coveralls": "^2.11.13",
    "eslint": "^3.5.0",
    "eslint-config-lukechilds": "^1.9.0",
    "nyc": "^10.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "c9c89bc5d2d3e9b6f76788437465c7b1ab654ef7",
    "tarball": "https://registry.npmjs.org/browser-env/-/browser-env-2.0.31.tgz"
  },
  "engines": {
    "node": ">=4"
  },
  "eslintConfig": {
    "extends": "lukechilds",
    "rules": {
      "prefer-rest-params": "off"
    }
  },
  "gitHead": "74c562ac0c66427c6ed89dcfa4f50a923ddf00e9",
  "homepage": "https://github.com/lukechilds/browser-env#readme",
  "keywords": [
    "simulate",
    "global",
    "node",
    "browser",
    "environment",
    "env"
  ],
  "license": "MIT",
  "main": "src/index.js",
  "maintainers": [
    {
      "name": "lukechilds",
      "email": "lukechilds123@gmail.com"
    }
  ],
  "name": "browser-env",
  "optionalDependencies": {},
  "readme": "# browser-env\n\n> Simulates a global browser environment using [`jsdom`](https://github.com/tmpvar/jsdom).\n\n[![Build Status](https://travis-ci.org/lukechilds/browser-env.svg?branch=master)](https://travis-ci.org/lukechilds/browser-env) [![Coverage Status](https://coveralls.io/repos/github/lukechilds/browser-env/badge.svg?branch=master)](https://coveralls.io/github/lukechilds/browser-env?branch=master) [![npm](https://img.shields.io/npm/dm/browser-env.svg)](https://www.npmjs.com/package/browser-env)\n\nThis allows you to run browser modules in Node.js 4 or newer with minimal or no effort. Can also be used to test browser modules with any Node.js test framework. Please note, only the DOM is simulated, if you want to run a module that requires more advanced browser features (like `localStorage`), you'll need to polyfill that seperately.\n\n> ❗️**Important note**\n>\n> This module adds properties from the `jsdom` window namespace to the Node.js global namespace. This is explicitly [recommended against](https://github.com/tmpvar/jsdom/wiki/Don't-stuff-jsdom-globals-onto-the-Node-global) by `jsdom`. There may be scenarios where this is ok for your use case but please read through the linked wiki page and make sure you understand the caveats. If you don't need the browser environment enabled globally, [`window`](https://github.com/lukechilds/window) may be a better solution.\n\n## Install\n\n```shell\nnpm install --save browser-env\n```\n\nOr if you're just using for testing you'll probably want:\n\n```shell\nnpm install --save-dev browser-env\n```\n\n## Usage\n\n```js\n// Init\nrequire('browser-env')();\n\n// Now you have access to a browser like environment in Node.js:\n\ntypeof window;\n// 'object'\n\ntypeof document;\n// 'object'\n\nvar div = document.createElement('div');\n// HTMLDivElement\n\ndiv instanceof HTMLElement\n// true\n```\n\nBy default everything in the `jsdom` window namespace is tacked on to the Node.js global namespace (excluding existing Node.js properties e.g `console`, `setTimout`). If you want to trim this down you can pass an array of required properties:\n\n```js\n// Init\nrequire('browser-env')(['window']);\n\ntypeof window;\n// 'object'\n\ntypeof document;\n// 'undefined'\n```\n\nYou can also pass a config object straight through to `jsdom`. This can be done with or without specifying required properties.\n\n```js\nrequire('browser-env')(['window'], { userAgent: 'My User Agent' });\n\n// or\n\nrequire('browser-env')({ userAgent: 'My User Agent' });\n```\n\nYou can of course also assign to a function:\n\n```js\nvar browserEnv = require('browser-env');\nbrowserEnv();\n\n// or\n\nimport browserEnv from 'browser-env';\nbrowserEnv();\n```\n\n## Related\n\n- [`window`](https://github.com/lukechilds/window) - Exports a jsdom window object\n\n## License\n\nMIT © Luke Childs\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lukechilds/browser-env.git"
  },
  "scripts": {
    "coverage": "nyc report --reporter=text-lcov | coveralls",
    "lint": "eslint src",
    "test": "nyc ava test"
  },
  "version": "2.0.31"
}
